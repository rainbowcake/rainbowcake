public final class co/zsmb/rainbowcake/ContextsKt {
	public static final fun getIoContext ()Lkotlin/coroutines/CoroutineContext;
	public static final fun setIoContext (Lkotlin/coroutines/CoroutineContext;)V
	public static final fun withIOContext (Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class co/zsmb/rainbowcake/base/OneShotEvent {
}

public abstract interface class co/zsmb/rainbowcake/base/QueuedOneShotEvent : co/zsmb/rainbowcake/base/OneShotEvent {
}

public abstract class co/zsmb/rainbowcake/base/RainbowCakeActivity : androidx/appcompat/app/AppCompatActivity {
	protected field viewModel Lco/zsmb/rainbowcake/base/RainbowCakeViewModel;
	public fun <init> ()V
	protected final fun getViewModel ()Lco/zsmb/rainbowcake/base/RainbowCakeViewModel;
	protected fun onCreate (Landroid/os/Bundle;)V
	protected fun onEvent (Lco/zsmb/rainbowcake/base/OneShotEvent;)V
	protected abstract fun provideViewModel ()Lco/zsmb/rainbowcake/base/RainbowCakeViewModel;
	protected abstract fun render (Ljava/lang/Object;)V
	protected final fun setViewModel (Lco/zsmb/rainbowcake/base/RainbowCakeViewModel;)V
}

public abstract class co/zsmb/rainbowcake/base/RainbowCakeBottomSheetDialogFragment : com/google/android/material/bottomsheet/BottomSheetDialogFragment {
	protected field viewModel Lco/zsmb/rainbowcake/base/RainbowCakeViewModel;
	public fun <init> ()V
	protected final fun getViewModel ()Lco/zsmb/rainbowcake/base/RainbowCakeViewModel;
	protected fun getViewResource ()I
	public fun onCreate (Landroid/os/Bundle;)V
	public fun onCreateView (Landroid/view/LayoutInflater;Landroid/view/ViewGroup;Landroid/os/Bundle;)Landroid/view/View;
	protected fun onEvent (Lco/zsmb/rainbowcake/base/OneShotEvent;)V
	public fun onViewCreated (Landroid/view/View;Landroid/os/Bundle;)V
	protected abstract fun provideViewModel ()Lco/zsmb/rainbowcake/base/RainbowCakeViewModel;
	protected abstract fun render (Ljava/lang/Object;)V
	protected final fun setViewModel (Lco/zsmb/rainbowcake/base/RainbowCakeViewModel;)V
}

public abstract class co/zsmb/rainbowcake/base/RainbowCakeDialogFragment : androidx/fragment/app/DialogFragment {
	protected field viewModel Lco/zsmb/rainbowcake/base/RainbowCakeViewModel;
	public fun <init> ()V
	protected final fun getViewModel ()Lco/zsmb/rainbowcake/base/RainbowCakeViewModel;
	protected fun getViewResource ()I
	public fun onCreate (Landroid/os/Bundle;)V
	public fun onCreateView (Landroid/view/LayoutInflater;Landroid/view/ViewGroup;Landroid/os/Bundle;)Landroid/view/View;
	protected fun onEvent (Lco/zsmb/rainbowcake/base/OneShotEvent;)V
	public fun onViewCreated (Landroid/view/View;Landroid/os/Bundle;)V
	protected abstract fun provideViewModel ()Lco/zsmb/rainbowcake/base/RainbowCakeViewModel;
	protected abstract fun render (Ljava/lang/Object;)V
	protected final fun setViewModel (Lco/zsmb/rainbowcake/base/RainbowCakeViewModel;)V
}

public abstract class co/zsmb/rainbowcake/base/RainbowCakeFragment : androidx/fragment/app/Fragment {
	protected field viewModel Lco/zsmb/rainbowcake/base/RainbowCakeViewModel;
	public fun <init> ()V
	public final fun getOverrideAnimation ()Ljava/lang/Integer;
	protected final fun getViewModel ()Lco/zsmb/rainbowcake/base/RainbowCakeViewModel;
	protected fun getViewResource ()I
	public fun onCreate (Landroid/os/Bundle;)V
	public fun onCreateAnimation (IZI)Landroid/view/animation/Animation;
	public fun onCreateView (Landroid/view/LayoutInflater;Landroid/view/ViewGroup;Landroid/os/Bundle;)Landroid/view/View;
	protected fun onEvent (Lco/zsmb/rainbowcake/base/OneShotEvent;)V
	public fun onViewCreated (Landroid/view/View;Landroid/os/Bundle;)V
	protected abstract fun provideViewModel ()Lco/zsmb/rainbowcake/base/RainbowCakeViewModel;
	protected abstract fun render (Ljava/lang/Object;)V
	protected final fun setViewModel (Lco/zsmb/rainbowcake/base/RainbowCakeViewModel;)V
}

public abstract class co/zsmb/rainbowcake/base/RainbowCakeViewModel : androidx/lifecycle/ViewModel {
	public fun <init> (Ljava/lang/Object;)V
	protected final fun execute (ZLkotlin/jvm/functions/Function2;)V
	public static synthetic fun execute$default (Lco/zsmb/rainbowcake/base/RainbowCakeViewModel;ZLkotlin/jvm/functions/Function2;ILjava/lang/Object;)V
	protected final fun executeCancellable (ZLkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun executeCancellable$default (Lco/zsmb/rainbowcake/base/RainbowCakeViewModel;ZLkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
	protected final fun executeNonBlocking (Lkotlin/jvm/functions/Function2;)V
	public final fun getCoroutineScope ()Lkotlinx/coroutines/CoroutineScope;
	public final fun getEvents ()Lco/zsmb/rainbowcake/internal/livedata/LiveDataCollection;
	public final fun getQueuedEvents ()Lco/zsmb/rainbowcake/internal/livedata/LiveDataCollection;
	public final fun getState ()Landroidx/lifecycle/LiveData;
	protected final fun getViewState ()Ljava/lang/Object;
	protected fun onCleared ()V
	protected final fun postEvent (Lco/zsmb/rainbowcake/base/OneShotEvent;)V
	protected final fun postQueuedEvent (Lco/zsmb/rainbowcake/base/QueuedOneShotEvent;)V
	protected final fun setViewState (Ljava/lang/Object;)V
}

public abstract class co/zsmb/rainbowcake/base/ViewModelScope {
}

public abstract class co/zsmb/rainbowcake/base/ViewModelScope$Activity : co/zsmb/rainbowcake/base/ViewModelScope {
	public static final field Companion Lco/zsmb/rainbowcake/base/ViewModelScope$Activity$Companion;
	public synthetic fun <init> (Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public synthetic fun <init> (Ljava/lang/String;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getKey ()Ljava/lang/String;
}

public final class co/zsmb/rainbowcake/base/ViewModelScope$Activity$Companion : co/zsmb/rainbowcake/base/ViewModelScope$Activity {
	public final fun invoke (Ljava/lang/String;)Lco/zsmb/rainbowcake/base/ViewModelScope;
}

public final class co/zsmb/rainbowcake/base/ViewModelScope$Default : co/zsmb/rainbowcake/base/ViewModelScope {
	public static final field INSTANCE Lco/zsmb/rainbowcake/base/ViewModelScope$Default;
}

public abstract class co/zsmb/rainbowcake/base/ViewModelScope$ParentFragment : co/zsmb/rainbowcake/base/ViewModelScope {
	public static final field Companion Lco/zsmb/rainbowcake/base/ViewModelScope$ParentFragment$Companion;
	public synthetic fun <init> (Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public synthetic fun <init> (Ljava/lang/String;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getKey ()Ljava/lang/String;
}

public final class co/zsmb/rainbowcake/base/ViewModelScope$ParentFragment$Companion : co/zsmb/rainbowcake/base/ViewModelScope$ParentFragment {
	public final fun invoke (Ljava/lang/String;)Lco/zsmb/rainbowcake/base/ViewModelScope;
}

public final class co/zsmb/rainbowcake/config/ConfigurationKt {
	public static final fun rainbowCake (Lkotlin/jvm/functions/Function1;)V
}

public abstract interface class co/zsmb/rainbowcake/config/Logger {
	public abstract fun log (Ljava/lang/String;Ljava/lang/String;Lco/zsmb/rainbowcake/internal/logging/LogLevel;)V
	public abstract fun logThrowable (Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;Lco/zsmb/rainbowcake/internal/logging/LogLevel;)V
}

public final class co/zsmb/rainbowcake/config/Logger$DefaultImpls {
	public static synthetic fun log$default (Lco/zsmb/rainbowcake/config/Logger;Ljava/lang/String;Ljava/lang/String;Lco/zsmb/rainbowcake/internal/logging/LogLevel;ILjava/lang/Object;)V
	public static synthetic fun logThrowable$default (Lco/zsmb/rainbowcake/config/Logger;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;Lco/zsmb/rainbowcake/internal/logging/LogLevel;ILjava/lang/Object;)V
}

public final class co/zsmb/rainbowcake/config/Loggers {
	public static final field INSTANCE Lco/zsmb/rainbowcake/config/Loggers;
}

public final class co/zsmb/rainbowcake/config/Loggers$ANDROID : co/zsmb/rainbowcake/config/Logger {
	public static final field INSTANCE Lco/zsmb/rainbowcake/config/Loggers$ANDROID;
	public fun log (Ljava/lang/String;Ljava/lang/String;Lco/zsmb/rainbowcake/internal/logging/LogLevel;)V
	public fun logThrowable (Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;Lco/zsmb/rainbowcake/internal/logging/LogLevel;)V
}

public final class co/zsmb/rainbowcake/config/Loggers$NONE : co/zsmb/rainbowcake/config/Logger {
	public static final field INSTANCE Lco/zsmb/rainbowcake/config/Loggers$NONE;
	public fun log (Ljava/lang/String;Ljava/lang/String;Lco/zsmb/rainbowcake/internal/logging/LogLevel;)V
	public fun logThrowable (Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;Lco/zsmb/rainbowcake/internal/logging/LogLevel;)V
}

public abstract interface class co/zsmb/rainbowcake/config/RainbowCakeConfigurator {
	public abstract fun getConsumeExecuteExceptions ()Z
	public abstract fun getLogger ()Lco/zsmb/rainbowcake/config/Logger;
	public abstract fun isDebug ()Z
	public abstract fun isLoggable ()Z
	public abstract fun setConsumeExecuteExceptions (Z)V
	public abstract fun setDebug (Z)V
	public abstract fun setLoggable (Z)V
	public abstract fun setLogger (Lco/zsmb/rainbowcake/config/Logger;)V
}

public final class co/zsmb/rainbowcake/extensions/WhenKt {
	public static final fun getExhaustive (Ljava/lang/Object;)Ljava/lang/Object;
}

public abstract interface annotation class co/zsmb/rainbowcake/internal/InternalRainbowCakeApi : java/lang/annotation/Annotation {
}

public abstract interface class co/zsmb/rainbowcake/internal/livedata/LiveDataCollection {
	public abstract fun observe (Landroidx/lifecycle/LifecycleOwner;Landroidx/lifecycle/Observer;)V
	public abstract fun removeObserver (Landroidx/lifecycle/Observer;)V
}

public final class co/zsmb/rainbowcake/internal/logging/LogLevel : java/lang/Enum {
	public static final field ASSERT Lco/zsmb/rainbowcake/internal/logging/LogLevel;
	public static final field DEBUG Lco/zsmb/rainbowcake/internal/logging/LogLevel;
	public static final field ERROR Lco/zsmb/rainbowcake/internal/logging/LogLevel;
	public static final field INFO Lco/zsmb/rainbowcake/internal/logging/LogLevel;
	public static final field OFF Lco/zsmb/rainbowcake/internal/logging/LogLevel;
	public static final field VERBOSE Lco/zsmb/rainbowcake/internal/logging/LogLevel;
	public static final field WARN Lco/zsmb/rainbowcake/internal/logging/LogLevel;
	public final fun getPriority ()I
	public static fun valueOf (Ljava/lang/String;)Lco/zsmb/rainbowcake/internal/logging/LogLevel;
	public static fun values ()[Lco/zsmb/rainbowcake/internal/logging/LogLevel;
}

